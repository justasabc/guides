# ----------------------------------------------------------------
# http://www.walkernews.net/2007/07/02/how-to-create-linux-lvm-in-3-minutes/
# http://www.thegeekstuff.com/2010/08/how-to-create-lvm/
# http://kerry.blog.51cto.com/172631/568427
# http://www.linuxidc.com/Linux/2012-01/52672.htm
# http://blog.csdn.net/hilyoo/article/details/7779199
# ----------------------------------------------------------------

# pv
pvcreate
pvscan
pvdisplay  

# vg
vgcreate
vgscan 
vgdisplay

# lv
lvcreate
lvremove
lvrename 
lvextend
lvreduce
lvscan 
lvdisplay

#LVM stands for Logical Volume Manager.

#With LVM, we can create logical partitions that can span across one or more physical hard drives. First, the hard drives are divided into physical volumes, then those physical volumes are combined together to create the volume group and finally the logical volumes are created from volume group

# hard drives-->physical volumes-->volume group-->logical volumes

apt-get -y install lvm2

parted /dev/sax -l
#Number  Start   End    Size    File system     Name  Flags
# 1      1049kB  200MB  199MB   fat32                 boot
# 2      200MB   100GB  100GB   ext4
# 3      100GB   110GB  9800MB  ext2            test
# 6      110GB   120GB  10.0GB                  x
# 7      120GB   130GB  10.0GB                  y
# 5      200GB   578GB  378GB   ext4
# 4      578GB   598GB  20.0GB  linux-swap(v1)

df -h
#Filesystem      Size  Used Avail Use% Mounted on
#/dev/sda5       352G  6.4G  328G   2% /
#/dev/sda1       190M  128K  190M   1% /boot/efi
#/dev/sda2        93G  1.5G   87G   2% /nova-volume

#==============================================================
#Select the Physical Storage Devices for LVM – Use pvcreate, pvscan, pvdisplay Commands
#==============================================================
pvcreate /dev/sda6
#  Physical volume "/dev/sda6" successfully created
pvcreate /dev/sda7
#  Physical volume "/dev/sda7" successfully created

#As shown above two physical volumes are created – /dev/sda6 and /dev/sda7.
#If the physical volumes are already created, you can view them using the pvscan command as shown below.

pvscan
#  PV /dev/sda6                      lvm2 [9.31 GiB]
#  PV /dev/sda7                      lvm2 [9.31 GiB]
#  Total: 2 [18.63 GiB] / in use: 0 [0   ] / in no VG: 2 [18.63 GiB]

#You can view the list of physical volumes with attributes like size, physical extent size, total physical extent size, the free space, etc., using pvdisplay command as shown below.
pvdisplay
#  "/dev/sda6" is a new physical volume of "9.31 GiB"
#  --- NEW Physical volume ---
#  PV Name               /dev/sda6
#  VG Name               
#  PV Size               9.31 GiB
#  Allocatable           NO
#  PE Size               0   
#  Total PE              0
#  Free PE               0
#  Allocated PE          0
#  PV UUID               dagARc-NJhK-zvKI-54wN-fT6I-8hkw-Q9cyaN
#   
#  "/dev/sda7" is a new physical volume of "9.31 GiB"
#  --- NEW Physical volume ---
#  PV Name               /dev/sda7
#  VG Name               
#  PV Size               9.31 GiB
#  Allocatable           NO
#  PE Size               0   
#  Total PE              0
#  Free PE               0
#  Allocated PE          0
#  PV UUID               UCpgaX-wQyy-bcy3-dtWQ-aG6j-ep22-b3WYwR
   
#==============================================================
#Create the Volume Group – Use vgcreate, vgdisplay Commands
#==============================================================

#Volume groups are nothing but a pool of storage that consists of one or more physical volumes. Once you create the physical volume, you can create the volume group (VG) from these physical volumes (PV).

#In this example, the volume group vol_grp1 is created from the two physical volumes as shown below.

vgcreate vg1 /dev/sda6 /dev/sda7
#  Volume group "vg1" successfully created

vgdisplay
#  --- Volume group ---
#  VG Name               vg1
#  System ID             
#  Format                lvm2
#  Metadata Areas        2
#  Metadata Sequence No  1
#  VG Access             read/write
#  VG Status             resizable
#  MAX LV                0
#  Cur LV                0
#  Open LV               0
#  Max PV                0
#  Cur PV                2
#  Act PV                2
#  VG Size               18.62 GiB
#  PE Size               4.00 MiB
#  Total PE              4768
#  Alloc PE / Size       0 / 0   
#  Free  PE / Size       4768 / 18.62 GiB
#  VG UUID               orwjwL-alhq-vCy5-a04d-fuWd-rNjD-CL6p1o


#==============================================================
#LVM Create: Create Logical Volumes – Use lvcreate, lvdisplay command
#==============================================================
#Now, everything is ready to create the logical volumes from the volume groups. lvcreate command creates the logical volume with the size of 80MB

lvcreate -l 20 -n logical_vol1 vg1
#  Logical volume "logical_vol1" created

# 1LE = 4M
# 20LE = 20*4M = 80M

lvcreate -L 80M -n logical_vol1 vg1
lvcreate --size 80M -n logical_vol1 vg1

#Use lvdisplay command as shown below, to view the available logical volumes with its attributes.
lvdisplay
#  --- Logical volume ---
#  LV Name                /dev/vg1/logical_vol1
#  VG Name                vg1
#  LV UUID                h0tv7K-fj9k-lhD1-0eYV-L6xW-esIt-csTMjW
#  LV Write Access        read/write
#  LV Status              available
#  # open                 0
#  LV Size                80.00 MiB
#  Current LE             20
#  Segments               1
#  Allocation             inherit
#  Read ahead sectors     auto
#  - currently set to     256
#  Block device           252:0

#After creating the appropriate filesystem on the logical volumes, it becomes ready to use for the storage purpose.
mkfs.ext4 /dev/vg1/logical_vol1

#==============================================================
#LVM resize: Change the size of the logical volumes – Use lvextend Command
#==============================================================

#We can extend the size of the logical volumes after creating it by using lvextend utility as shown below. The changes the size of the logical volume from 80MB to 100MB.

lvextend -L 1024 /dev/vg1/logical_vol1 
#  Extending logical volume logical_vol1 to 1.00 GiB
#  Logical volume logical_vol1 successfully resized

#We can also add additional size to a specific logical volume as shown below.

lvextend -L +1G /dev/vg1/logical_vol1
#  Extending logical volume logical_vol1 to 2.00 GiB
#  Logical volume logical_vol1 successfully resized


lvscan
#  ACTIVE            '/dev/vg1/logical_vol1' [1.00 GiB] inherit

lvdisplay 
#  --- Logical volume ---
#  LV Name                /dev/vg1/logical_vol1
#  VG Name                vg1
#  LV UUID                h0tv7K-fj9k-lhD1-0eYV-L6xW-esIt-csTMjW
#  LV Write Access        read/write
#  LV Status              available
#  # open                 0
#  LV Size                1.00 GiB
#  Current LE             256
#  Segments               1
#  Allocation             inherit
#  Read ahead sectors     auto
#  - currently set to     256
#  Block device           252:0

lvremove vg1/logical_vol1
lvremove /dev/vg1/logical_vol1

mount /dev/vg1/logical_vol1 /mnt
df -h
#Filesystem                    Size  Used Avail Use% Mounted on
#/dev/sda5                     352G  6.4G  328G   2% /
#/dev/sda1                     190M  128K  190M   1% /boot/efi
#/dev/sda2                      93G  1.5G   87G   2% /nova-volume
#/dev/mapper/vg1-logical_vol1  5.0G  203M  4.6G   5% /mnt

umount /mnt
df -h
#Filesystem                    Size  Used Avail Use% Mounted on
#/dev/sda5                     352G  6.4G  328G   2% /
#/dev/sda1                     190M  128K  190M   1% /boot/efi
#/dev/sda2                      93G  1.5G   87G   2% /nova-volume
