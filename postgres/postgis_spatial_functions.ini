# PostGIS Functions
# There are three different base-defined geometry types: POINT (point), LINESTRING (line) and Polygon (area).  Of these four basic types of geometry types are derived: MULTIPOINT, MULTILINESTRING, MULTIPOLYGON and GEOMETRYCOLLECTION. 
# Well-Known Text(WKT) and Well-Known Binary(WKB)
# The column for the geometry data must be generated with the PostGIS function (OpenGIS) AddGeometryColumn (), where each statement, select only one geometry column can be created.  So there are two steps necessary to create a table with a geometry column:
# CREATE TABLE xxx
# SELECT AddGeometryColumn ()
# AddGeometryColumn (schema name, table name, column name, SRID, geometry, dimension) 
# or if the table in the default schema (public) should be created:  
#  AddGeometryColumn (table name, column name, SRID, geometry, dimension) 
# Scheme Name VARCHAR  The scheme, under which the table should be created 
# Table Name     VARCHAR  Name of the table 
# Column Name VARCHAR  Name of the geometry column 
# SRID  INTEGER Spatial Reference System Identifier, for example, 31,467 Gauss-Krüger or -1 if not set. 
# Geometry         VARCHAR  eg 'POINT', 'LINE STRING', 'POLYGON' 
# Dimension       INTEGER     Dimension of the points (2 or 3) 
# 
psql my_spatial_db
# POINT
CREATE TABLE point (ps INTEGER, name VARCHAR);
SELECT AddGeometryColumn('point','geom',-1,'POINT',2);
SELECT AddGeometryColumn('public','point','geom',-1,'POINT',2);
# LINESTRING
CREATE TABLE line (ps INTEGER, name VARCHAR);
SELECT AddGeometryColumn('line','geom',-1,'LINESTRING',2);
# POLYGON
CREATE TABLE polygon (ps INTEGER, name VARCHAR);
SELECT AddGeometryColumn('polygon','geom',-1,'POLYGON',2);

#  GeometryFromText (text, SRID) 
# text  VARCHAR  Geometry in WKT format, eg 'POINT (10 20)' 
# SRID  INTEGER Spatial Reference System Identifier, for example, 31,467 Gauss-Krüger or -1 if not set. 
INSERT INTO point(ps,name,geom) VALUES(1234,'red',ST_GeometryFromText('POINT (100 200)',-1));

SELECT ps,name, geom FROM point; # geom WKB
SELECT ps,name, ST_AsText(geom) FROM point; # st_astext  WKT
SELECT ps,name, ST_AsText(geom) as geomText FROM point; # geomtext WKT

# Procedural Language : PL/pgSQL
# List databases and tables
# \l \c db \d \d table  
psql postgres
postgres=# select version(); 
postgres=#\l  # list all databases
postgres=#\c testdb # psql testdb
testdb=#\c postgis
postgis=#\d  # list all tables in db
postgis=#\d spatial_ref_sys  # describe table
postgis=#SELECT * from spatial_ref_sys;

