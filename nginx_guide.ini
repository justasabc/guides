#nginx quickstart 
#----------------
#* 2013.10.16 - justasabc

#install
#-------
apt-get install nginx

#configuration
#------------
/etc/nginx/nginx.conf
/etc/nginx/sites-enabled/default

#logging
#-------
/var/log/nginx/access.log
/var/log/nginx/error.log

#www
#---
/usr/share/nginx/www/

#start/stop/reload
#----------------
# Start nginx
nginx	

# Check whether nginx is running
ps aux|grep nginx

root     12697  0.0  0.1  76992  2388 ?        Ss   18:03   0:00 nginx: master process nginx
www-data 12925  0.0  0.0  77336  1864 ?        S    18:29   0:00 nginx: worker process
www-data 12926  0.0  0.0  77336  1864 ?        S    18:29   0:00 nginx: worker process
www-data 12927  0.0  0.0  77336  1864 ?        S    18:29   0:00 nginx: worker process
www-data 12928  0.0  0.0  77336  1864 ?        S    18:29   0:00 nginx: worker process

lsof -i :8080

COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
nginx   12697     root   18u  IPv4 672594      0t0  TCP localhost:http-alt (LISTEN)
nginx   12925 www-data   18u  IPv4 672594      0t0  TCP localhost:http-alt (LISTEN)
nginx   12926 www-data   18u  IPv4 672594      0t0  TCP localhost:http-alt (LISTEN)
nginx   12927 www-data   18u  IPv4 672594      0t0  TCP localhost:http-alt (LISTEN)
nginx   12928 www-data   18u  IPv4 672594      0t0  TCP localhost:http-alt (LISTEN)

# Once nginx is started, it can be controlled by invoking the executable with the -s parameter. Use the following syntax:
    nginx -s signal
# Where signal may be one of the following:
    stop — fast shutdown
    quit — graceful shutdown
    reload — reloading the configuration file
    reopen — reopening the log files

#openssl cmds
#----
openssl genrsa -h
openssl rsa -h
# generate a pair of public/private key without encrypt
openssl genrsa -out server.key 1024

# generate a pair of public/private key WITH encrypt(Prompt to input a passphrase)
openssl genrsa -des3 -out enc-server.key 1024
# remove the passphrase from encrypt public/private key pair(Prompt to input a passphrase)
openssl rsa -in enc-server.key -out server2.key
#(server2.key is NOT same as server.key)

#see the text details of RSA key pair
# with private key
openssl rsa -in server.key -text 
# without private key
openssl rsa -in server.key -text -noout 

# extract public key from public/private key pair
openssl rsa -in server.key -pubout -out public-server.key

# create a CSR from public/private key pair
#(Prompt to input information, especailly Commaon Name)
#(set domain name or IP address)
openssl req -new -key server.key -out server.csr

# sign SSL certificate
openssl x509 -req -in server.csr -signkey server.key -days 365 -out server.crt
 
#SSL
#----
# refs: https://www.digitalocean.com/community/articles/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04
# step1: generate public/private key pair
openssl genrsa -out server.key 1024
# step2: generate csr from public/private key pair
# set ip address or localhost for common name when prompt
openssl req -new -key server.key -out server.csr
# step3: sign SSL certificate
openssl x509 -req -in server.csr -signkey server.key -days 365 -out server.crt

# Assume server.crt and server.key are in /etc/nginx/ssl/ folder
# step4: configure in /etc/nginx/sites-available/default
	ssl_certificate ./ssl/server.crt; 
	ssl_certificate_key ./ssl/server.key; 

#Errors
#----
#* 403 Forbidden
#1) index.html not exist in /usr/share/nginx/www/ 
#visit localhost/ will cause 403 error 
